#!/bin/bash

# ü§ñ Script de Actualizaci√≥n Autom√°tica de Documentaci√≥n - SGC ISO 9001
# Actualiza autom√°ticamente los mapas de archivos y base de datos cada 20 minutos

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
NODE_SCRIPT="$SCRIPT_DIR/backend/scripts/permanentes/actualizar-documentacion.js"
LOG_FILE="$SCRIPT_DIR/docs-update.log"
CONTROL_FILE="$SCRIPT_DIR/daemon-control.txt"

# Funci√≥n para escribir logs
write_log() {
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    local log_message="[$timestamp] $message"
    echo "$log_message"
    echo "$log_message" >> "$LOG_FILE"
}

# Funci√≥n para verificar si el script Node.js existe
test_node_script() {
    if [ ! -f "$NODE_SCRIPT" ]; then
        write_log "‚ùå ERROR: Script de Node.js no encontrado en $NODE_SCRIPT"
        return 1
    fi
    return 0
}

# Funci√≥n para actualizar documentaci√≥n
update_documentation() {
    local force_flag="$1"
    
    if ! test_node_script; then
        return 1
    fi
    
    write_log "üîÑ Iniciando actualizaci√≥n de documentaci√≥n..."
    
    local args=("$NODE_SCRIPT")
    if [ "$force_flag" = "--force" ]; then
        args+=("--force")
    fi
    
    if node "${args[@]}"; then
        write_log "‚úÖ Documentaci√≥n actualizada exitosamente"
        return 0
    else
        write_log "‚ùå Error al actualizar documentaci√≥n"
        return 1
    fi
}

# Funci√≥n para iniciar modo daemon
start_daemon_mode() {
    write_log "ü§ñ Iniciando modo daemon - Actualizaci√≥n cada 20 minutos"
    write_log "üìç Directorio de trabajo: $SCRIPT_DIR"
    write_log "üìÑ Script Node.js: $NODE_SCRIPT"
    write_log "üìù Log file: $LOG_FILE"
    
    # Crear archivo de control
    echo "RUNNING" > "$CONTROL_FILE"
    write_log "üéØ Daemon iniciado. Para detener: rm $CONTROL_FILE"
    
    # Ejecutar actualizaci√≥n inicial
    update_documentation "--force"
    
    # Loop principal del daemon
    while [ -f "$CONTROL_FILE" ]; do
        if [ -f "$CONTROL_FILE" ]; then
            local control_content=$(cat "$CONTROL_FILE" 2>/dev/null)
            if [ "$control_content" = "STOP" ]; then
                write_log "üõë Se√±al de parada recibida. Deteniendo daemon..."
                break
            fi
        fi
        
        write_log "‚è∞ Esperando 20 minutos para pr√≥xima actualizaci√≥n..."
        
        # Esperar 20 minutos con verificaci√≥n cada minuto
        for i in {1..20}; do
            sleep 60
            
            # Verificar si se debe detener
            if [ ! -f "$CONTROL_FILE" ]; then
                write_log "üõë Archivo de control eliminado. Deteniendo daemon..."
                return
            fi
            
            if [ -f "$CONTROL_FILE" ]; then
                local control_content=$(cat "$CONTROL_FILE" 2>/dev/null)
                if [ "$control_content" = "STOP" ]; then
                    write_log "üõë Se√±al de parada recibida. Deteniendo daemon..."
                    return
                fi
            fi
        done
        
        # Ejecutar actualizaci√≥n
        if [ -f "$CONTROL_FILE" ]; then
            update_documentation
        fi
    done
    
    write_log "üèÅ Daemon detenido"
}

# Funci√≥n para detener daemon
stop_daemon() {
    if [ -f "$CONTROL_FILE" ]; then
        echo "STOP" > "$CONTROL_FILE"
        write_log "üõë Se√±al de parada enviada al daemon"
        
        # Esperar a que el daemon se detenga
        local timeout=0
        while [ -f "$CONTROL_FILE" ] && [ $timeout -lt 30 ]; do
            sleep 1
            ((timeout++))
        done
        
        if [ -f "$CONTROL_FILE" ]; then
            rm -f "$CONTROL_FILE"
            write_log "üóëÔ∏è Archivo de control eliminado forzosamente"
        fi
        
        write_log "‚úÖ Daemon detenido exitosamente"
    else
        write_log "‚ÑπÔ∏è No hay daemon ejecut√°ndose"
    fi
}

# Funci√≥n para verificar estado
check_status() {
    if [ -f "$CONTROL_FILE" ]; then
        local content=$(cat "$CONTROL_FILE")
        write_log "ü§ñ Daemon ejecut√°ndose (Estado: $content)"
        
        # Verificar logs recientes
        if [ -f "$LOG_FILE" ]; then
            write_log "üìù √öltimas 5 entradas del log:"
            tail -5 "$LOG_FILE" | while read line; do
                echo "  $line"
            done
        fi
    else
        write_log "üí§ Daemon no est√° ejecut√°ndose"
    fi
    
    # Verificar archivos de documentaci√≥n
    local docs_path="$SCRIPT_DIR/docs-esenciales"
    local mapa_archivos="$docs_path/04-mapa-archivos.md"
    local mapa_database="$docs_path/05-mapa-database.md"
    
    if [ -f "$mapa_archivos" ]; then
        local last_modified=$(stat -c %y "$mapa_archivos" 2>/dev/null || stat -f %Sm "$mapa_archivos" 2>/dev/null)
        write_log "üìÅ Mapa de archivos: √öltima actualizaci√≥n $last_modified"
    else
        write_log "‚ùå Mapa de archivos no existe"
    fi
    
    if [ -f "$mapa_database" ]; then
        local last_modified=$(stat -c %y "$mapa_database" 2>/dev/null || stat -f %Sm "$mapa_database" 2>/dev/null)
        write_log "üóÑÔ∏è Mapa de BD: √öltima actualizaci√≥n $last_modified"
    else
        write_log "‚ùå Mapa de base de datos no existe"
    fi
}

# Mostrar banner
echo ""
echo "ü§ñ SISTEMA DE ACTUALIZACI√ìN AUTOM√ÅTICA DE DOCUMENTACI√ìN"
echo "üìö Sistema SGC ISO 9001 - Documentaci√≥n Esencial"
echo "‚è∞ Frecuencia: Cada 20 minutos"
echo ""

# Procesar argumentos
case "$1" in
    --daemon)
        start_daemon_mode
        ;;
    --force)
        write_log "üîÑ Forzando actualizaci√≥n manual..."
        if update_documentation "--force"; then
            write_log "‚úÖ Actualizaci√≥n manual completada"
        else
            write_log "‚ùå Error en actualizaci√≥n manual"
        fi
        ;;
    --check)
        check_status
        ;;
    --stop)
        stop_daemon
        ;;
    *)
        # Modo por defecto: verificar si necesita actualizaci√≥n
        write_log "üîç Verificando necesidad de actualizaci√≥n..."
        if update_documentation; then
            write_log "‚úÖ Actualizaci√≥n completada"
        else
            write_log "‚ùå Error en actualizaci√≥n"
        fi
        ;;
esac

echo ""
echo "üìã COMANDOS DISPONIBLES:"
echo "  ./actualizar-docs-automatico.sh --daemon   # Iniciar modo daemon (cada 20min)"
echo "  ./actualizar-docs-automatico.sh --force    # Forzar actualizaci√≥n manual"
echo "  ./actualizar-docs-automatico.sh --check    # Verificar estado del sistema"
echo "  ./actualizar-docs-automatico.sh --stop     # Detener daemon"
echo ""